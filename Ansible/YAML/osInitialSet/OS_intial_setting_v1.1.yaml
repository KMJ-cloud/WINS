#  ##   ##   ####    ##   ##   #####              ####   ####      #####   ##   ##  #####             ##   ##   #####   ######            ######   #######    ##     ##   ## #
#  ##   ##    ##     ###  ##  ##   ##            ##  ##   ##      ##   ##  ##   ##   ## ##            ### ###  ##   ##   ##  ##           # ## #    ##   #   ####    ### ### #
#  ##   ##    ##     #### ##  #                 ##        ##      ##   ##  ##   ##   ##  ##           #######  #         ##  ##             ##      ## #    ##  ##   ####### #
#  ## # ##    ##     ## ####   #####            ##        ##      ##   ##  ##   ##   ##  ##           #######   #####    #####              ##      ####    ##  ##   ####### #
#  #######    ##     ##  ###       ##           ##        ##   #  ##   ##  ##   ##   ##  ##           ## # ##       ##   ##                 ##      ## #    ######   ## # ## #
#  ### ###    ##     ##   ##  ##   ##            ##  ##   ##  ##  ##   ##  ##   ##   ## ##            ##   ##  ##   ##   ##                 ##      ##   #  ##  ##   ##   ## #
#  ##   ##   ####    ##   ##   #####              ####   #######   #####    #####   #####             ##   ##   #####   ####               ####    #######  ##  ##   ##   ## #
--- 
- name: "Cloud MSP Ubuntu22.04 Initial set"
  hosts: Ubuntu
  become: yes
  gather_facts: no

  tasks:
     ###############################
     ###### STEP 0. 백업
    - name: "STEP 0-0. Backup: Date Formatiing"
      command: date +"%Y-%m-%d_%H-%M-%S"
      register: ldate

    - name: "STEP 0-1. Backup: Make a Backup Directory "
      file:
        path: "/root/winsBackup_{{ ldate.stdout }}"
        state: directory

    - name: "STEP 0-2. Backup: /etc/localtime"
      copy:
        src: /etc/localtime
        dest: "/root/winsBackup_{{ ldate.stdout }}/localtime"
        remote_src: yes

    - name: "STEP 0-3. Backup: /etc/profile"
      copy:
        src: /etc/profile
        dest: "/root/winsBackup_{{ ldate.stdout }}/profile"
        remote_src: yes

    - name: "STEP 0-4. Backup: /etc/ssh/sshd_config"
      copy:
        src: /etc/ssh/sshd_config
        dest: "/root/winsBackup_{{ ldate.stdout }}/sshd_config"
        remote_src: yes

    - name: "STEP 0-5. Backup: /etc/chrony/chrony.conf"
      copy:
        src: /etc/chrony/chrony.conf
        dest: "/root/winsBackup_{{ ldate.stdout }}/chrony.conf"
        remote_src: yes

    - name: "STEP 0-6. Backup: Result"
      debug:
        msg: "Backup is done."


     ###############################
     ###### STEP 1. 타임존 변경
    - name: "STEP 1-1. Convert UTC to KST"
      file:
        src: /usr/share/zoneinfo/Asia/Seoul
        dest: /etc/localtime
        owner: root
        group: root
        state: link

    - name: "STEP 1-2. Convert UTC to KST: Result"
      debug:
        msg: "Convertting UTC to KST is done"


     ###############################
     ###### STEP 2. 히스토리 시간 포맷 설정
    - name: "STEP 2-1. History Time Log"
      lineinfile:
        path: /etc/profile
        line: HISTTIMEFORMAT=\"[%Y-%m-%d_%H:%M:%S]
        
    - name: "STEP 2-2. History Time Log: Result"
      debug:
        msg: "History Time setting is done."


     ###############################
     ###### STEP 3. root 로그인 제한
    - name: "STEP 3-1. Set SSH Config: Block to access root ssh directly"
      replace:
        path: /etc/ssh/sshd_config
        regexp: '#PermitRootLogin prohibit-password'
        replace: 'PermitRootLogin no'

    - name: "STEP 3-2. Set SSH Config: Allow to login with password"        
      replace:
        path: /etc/ssh/sshd_config
        regexp: 'PasswordAuthentication no'
        replace: 'PasswordAuthentication yes'  

    - name: "STEP 3-3. Set SSH Config: Restart sshd"
      service:
        name: sshd
        state: restarted

    - name: "STEP 3-4. Set SSH Config: Result"
      debug:
        msg: "SSH Config setting is done."


     ###############################
     ###### STEP 4. 계정 패스워드 변경
    - name: "STEP 4-1. Set password: root"
      user:
        name: root
        password: "{{ 'Sniper13@$' | password_hash('sha512') }}"

    - name: "STEP 4-2. Set password: ubuntu"
      user:
        name: ubuntu
        password: "{{ 'Sniper13@$' | password_hash('sha512') }}"

    - name: "STEP 4-3. Set password: Result"
      debug:
        msg: "Password setting is done"

    
     ###############################
     ###### STEP 5. 네트워크 기본 툴 패키지 설치
    - name: "STEP 5-1. Network Tool Install"
      apt:
        name:
          - iputils-*
          - net-tools
          - tcpdump
        state: present

    - name: "STEP 5-2. Network Tool Install: Result"
      debug:
        msg: "Network tool install is done."    


     ###############################
     ###### STEP 6. NTP 설정
    - name: "STEP 6-1. NTP Client Configuration: Remove default NTP server"
      lineinfile:
        path: /etc/chrony/chrony.conf
        state: absent
        regexp: "^pool"

    - name: "STEP 6-2. NTP Client Configuration: Add a NTP Korea Server"
      lineinfile:
        path: /etc/chrony/chrony.conf
        insertafter: '# See http://www.pool.ntp.org/join.html for more information.'
        line: 'server time.bora.net iburst'

    - name: "STEP 6-3. NTP Client Configuration: Restart chrony"
      service:
        name: chrony
        state: restarted

    - name: "STEP 6-4. NTP Client Configuration: Result"
      debug:
        msg: "NTP server add is Done."    


     ###############################
     ###### 작업 완료 메세지
    - name: "TASK IS Done"
      debug:
        msg: "ALL OF Ubuntu22.04 TASK IS Done" 


        
###### 로키 시작 #######################
- name: "Cloud MSP Rocky8.9 Initial set"
  hosts: Rocky
  become: yes
  gather_facts: no

  tasks:
     ###############################
     ###### STEP 0. 백업
    - name: "STEP 0-0. Backup: Date Formatiing"
      command: date +"%Y-%m-%d_%H-%M-%S"
      register: ldate

    - name: "STEP 0-1. Backup: Make a Backup Directory "
      file:
        path: "/root/winsBackup_{{ ldate.stdout }}"
        state: directory

    - name: "STEP 0-2. Backup: /etc/localtime"
      copy:
        src: /etc/localtime
        dest: "/root/winsBackup_{{ ldate.stdout }}/localtime"
        remote_src: yes

    - name: "STEP 0-3. Backup: /etc/profile"
      copy:
        src: /etc/profile
        dest: "/root/winsBackup_{{ ldate.stdout }}/profile"
        remote_src: yes

    - name: "STEP 0-4. Backup: /etc/ssh/sshd_config"
      copy:
        src: /etc/ssh/sshd_config
        dest: "/root/winsBackup_{{ ldate.stdout }}/sshd_config"
        remote_src: yes

    - name: "STEP 0-5. Backup: /etc/selinux/config"
      copy:
        src: /etc/selinux/config
        dest: "/root/winsBackup_{{ ldate.stdout }}/selinux_config"
        remote_src: yes

    - name: "STEP 0-6. Backup: /etc/chrony/chrony.conf"
      copy:
        src: /etc/chrony.conf
        dest: "/root/winsBackup_{{ ldate.stdout }}/chrony.conf"
        remote_src: yes

    - name: "STEP 0-7. Backup: Result"
      debug:
        msg: "Backup is done."


     ###############################
     ###### STEP 1. 타임존 변경
    - name: "STEP 1-1. Convert UTC to KST"
      file:
        src: /usr/share/zoneinfo/Asia/Seoul
        dest: /etc/localtime
        owner: root
        group: root
        state: link

    - name: "STEP 1-2. Convert UTC to KST: Result"
      debug:
        msg: "Done convertting UTC to KST."


     ###############################
     ###### STEP 2. 히스토리 로깅 시간 추가
    - name: "STEP 2-1. History Time Logging"
      lineinfile:
        path: /etc/profile
        line: HISTTIMEFORMAT=\"[%Y-%m-%d_%H:%M:%S]

    - name: "STEP 2-2. History Time Log: Result"
      debug:
        msg: "History Time setting is done."


     ###############################
     ###### STEP 3. root 로그인 제한
    - name: "STEP 3-1. SSH root login: Block to access root ssh directly"
      replace:
        path: /etc/ssh/sshd_config
        regexp: 'PermitRootLogin yes'
        replace: 'PermitRootLogin no'

    - name: "STEP 3-2. SSH Password Login: Allow to login with password"
      replace:
        path: /etc/ssh/sshd_config
        regexp: '#PasswordAuthentication yes' 
        replace: 'PasswordAuthentication yes'

    - name: "STEP 3-3. SSH Password Login: Check if PasswordAuthentication is set to no"
      shell: "grep -E '^\\s*PasswordAuthentication\\s+no' /etc/ssh/sshd_config || true"
      register: grep_result
      changed_when: false

    - name: "STEP 3-3. SSH Password Login: Comment PasswordAuthentication if it's set to no"
      replace:
        path: /etc/ssh/sshd_config
        regexp: '^\s*PasswordAuthentication\s+no'
        replace: '#PasswordAuthentication no'
      when: grep_result.rc == 0

    - name: "STEP 3-4. SSH Password Login: Check if GSSAPIAuthentication is set to no"
      shell: "grep -E '^\\s*GSSAPIAuthentication\\s+yes' /etc/ssh/sshd_config || true"
      register: grep_result
      changed_when: false

    - name: "STEP 3-4. SSH Password Login: Comment GSSAPIAuthentication if it's set to no"
      replace:
        path: /etc/ssh/sshd_config
        regexp: '^\s*GSSAPIAuthentication\s+yes'
        replace: '#GSSAPIAuthentication yes'
      when: grep_result.rc == 0

    - name: "STEP 3-5. SSH Service : Restart sshd"
      service:
        name: sshd
        state: restarted

    - name: "STEP 3-6. Set SSH Config: Result"
      debug:
        msg: "SSH Config setting is done."


     ###############################
     ###### STEP 4. 계정 패스워드 변경
    - name: "STEP 4-1. Set password: root"
      shell: "echo 'Sniper13@$' | passwd --stdin root > /dev/null"

    - name: "STEP 4-2. Set password: rocky"
      shell: "echo 'Sniper13@$' | passwd --stdin rocky > /dev/null"

    - name: "STEP 4-3. Set password: Result"
      debug:
        msg: "Password setting is done"

        
     ###############################
     ###### STEP 5. Selinux 비활성화
    - name: "STEP 5-1. Selinux Disable" # config 파일 수정
      replace:
        path: /etc/selinux/config
        regexp: 'SELINUX=enforcing'
        replace: 'SELINUX=disabled'

    - name: "STEP 5-2. Selinux Disable: Result"
      debug:
        msg: "Set selinux disable."    


     ###############################
     ###### STEP 6. firewalld 비활성화
    - name: "STEP 6-1. firewalld disable: Check if firewalld is installed" # firewalld 설치 유무 확인
      stat: # 파일 존재 확인하는 모듈
        path: /usr/bin/firewalld
      register: firewalld_installed
      
    - name: "STEP 6-2. firewalld disable: Check if firewalld is running" # firewalld 서비스 중지
      systemd:
        name: firewalld
        state: stopped
      register: firewalld_running # 서비스 실행 유무 저장
      when: firewalld_installed.stat.exists # firewalld 설치 됐을때만 실행

    - name: "STEP 6-3. firewalld disable: Result" # 서비스 중지 메시지 출력
      debug:
        msg: "firewalld is {{ 'running' if firewalld_running.status == 'active' else 'not running' }}"
      when: firewalld_installed.stat.exists # firewalld 설치 됐을때만 실행


     ###############################
     ###### STEP 7. 네트워크 기본 툴 패키지 설치
    - name: "STEP 7-1. Network Tool Install" # dnf로 패키지 설치
      dnf:
        name: iputils, net-tools, tcpdump
        state: present

    - name: "STEP 7-2. Network Tool Install: Display the result"
      debug:
        msg: "Done network tool install."    


     ###############################
     ###### STEP 8. NTP 설정
    - name: "STEP 8-1. NTP Client Configuration: NTP config check"
      shell: "grep -E '^\\s*pool\\s+2.rocky.pool.ntp.org\\s+iburst' /etc/chrony.conf || true"
      register: chrony_result
      changed_when: false

    - name: "STEP 8-2. NTP Client Configuration: Comment default setting if it's set to no"
      replace:
        path: /etc/chrony.conf
        regexp: '^\s*pool\s+2.rocky.pool.ntp.org\s+iburst'
        replace: '#pool 2.rocky.pool.ntp.org iburst'
      when: chrony_result.rc == 0

    - name: "STEP 8-3. NTP Client Configuration: Add a NTP Korea Server"
      lineinfile:
        path: /etc/chrony.conf
        insertafter: '#pool 2.rocky.pool.ntp.org iburst'
        line: "server time.bora.net iburst"
        
    - name: "STEP 8-4. NTP Client Configuration: restart chrony"
      service:
        name: chronyd
        state: restarted

    - name: "STEP 8-5. NTP Client Configuration: Display the result"
      debug:
        msg: "NTP server add is Done"    


     ###############################
     ###### 작업 완료 메세지
    - name: "TASK IS Done"
      debug:
        msg: "ALL OF Rocky8.9 TASK IS Done" 
